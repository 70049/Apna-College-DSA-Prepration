
    #include<iostream>
    using namespace std;
    
    class node{
      public:
        int data;
        node* next;
        
        node(int val){
          data = val;
          next = NULL;
        }
    };
    
    void InsertTail(node* &head, int val){
       node* n =new node(val);
      if(head == NULL){
        head = n;
        return;
      }
     
      node* temp = head;
      while(temp-> next!= NULL){
        temp = temp->next;
      }
      temp->next = n;
    }
    void display(node* head){
      node* temp = head;
      while(temp!=NULL){
        cout<<temp->data<<"->";
        temp= temp->next;
      }
      cout<<"NULL"<<endl;
    }
    node* reverseK(node* &head, int k){
      node* prevptr = NULL;
      node* currptr = head;
      node* nextptr;
      
      int count= 0;
      while(currptr!=NULL && count<k){
        nextptr= currptr->next;
        currptr->next =prevptr;
        prevptr = nextptr;
        count++;
      }
      if(nextptr != NULL){
        head->next = reverseK(nextptr, k);
      }
      return prevptr;
    }
    
    void makeCycle(node* &head, int pos){
      node* temp = head;
      node* startNode;
      int count=1;
      while(temp->next!=NULL){
        if(count==pos){
          startNode = temp;
        }
        temp = temp->next;
        count++;
      }
      temp->next = startNode;
    }
    
    bool detectCycle(node* &head){
      node* slow = head;
      node* fast = head;
      
      while(fast!= NULL && fast->next!=NULL){
        slow = slow->next;
        fast = fast->next->next;
        
        if(fast==slow){
          return true;
        }
      }
      return false;
    }
    
    void removeCycle(node* head){
      node* slow = head;
      node* fast = head;
      
      do{
        slow= slow->next;
        fast = fast->next->next;
      }while(slow!=fast);
      
      fast = head;
      
      while(slow->next!= fast->next){
        slow = slow->next;
        fast = fast->next;
      }
      
      slow ->next =NULL;
    }
    
  
    
    int main(){
      node* head =NULL;
      InsertTail(head,1);
      InsertTail(head,2);
      InsertTail(head,3);
      InsertTail(head,4);
      InsertTail(head,5);
      InsertTail(head,6);
      InsertTail(head,7);
      
      display(head);
     
     makeCycle(head,3);
     cout<<detectCycle(head)<<endl;
     removeCycle(head);
     cout<<detectCycle(head)<<endl;
     display(head);
      
      return 0;
    }
